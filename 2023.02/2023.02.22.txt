Q1. 입출력 사용 후 Stream close()를 해주지 않으면 JVM에서 자동적으로 닫아준다고 하는데,
 이 과정에서 gc도 개입을 하는건가요?
A1 메모리에 접근하는 자원의 경우, GC에 의해 자동으로 소멸되므로, 개입할 수 밖에 없다

Q2. 메모리를 사용하는 스트림이나 표준입출력 스트림은 별도로 닫아주지 않아도 된다고 하는데요 그 이유가 뭔가요?
A2 일반 변수와 똑같다고 생각하면 된다. gc 및 스택에 의해 사용한 자원이 반환되기 때문이다.
	- 객체도 참조가 끊기면, 메모리 낭비를 줄이기 위해 gc에 의해서 소멸된다.

Q3. ByteArray 기반 스트림은 버퍼드스트림을 사용하지 않고 사용해도 되는지? 실제 어떤식으로 사용되는지.?
A3 임시저장 용도로 사용한다. JSP에서 StringWriter와 같은 객체의 역할
	- StringWriter란?...

Q4. 스트림 사용후 close()를 해줘야하는 이유
A 일반적으로 프로그램과 자원간의 스트림은 해당 작업이 끝나게 되면 해당 자원의 사용이 끝나게 되는 것이므로 스트림을
  닫아 자원을 해제해줘야 한다. 만약, 서블릿 환경처럼 웹서버의 페이지가 지속적으로 돌아가는 경우, 스트림을 닫지 않고
  자원을 연결해놓은 상태로 두게되면, 해당 자원에 의도치 않게 데이터가 변경되어 추후 실행 시 오류가 발생할 수 있고, 
  또한 메모리 관리 측면에서 자원을 해제하지 않으면 사용하지 않는 자원으로 인한 메모리 낭비가 발생하게 되므로 이를
  방지하기 위해서 항시 스트림은 작업이 끝나면 close() 해줘야 한다.